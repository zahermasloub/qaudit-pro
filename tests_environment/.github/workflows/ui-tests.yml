name: 🧪 UI Quality Tests
# Automated testing pipeline for Visual, Functional, Accessibility & Performance

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  schedule:
    # Run tests daily at 2 AM
    - cron: '0 2 * * *'

jobs:
  test:
    name: 🎯 Run All Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci --legacy-peer-deps

      - name: 🎭 Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: 🚀 Start Application
        run: |
          npm run build
          npm start &
          npx wait-on http://localhost:3001 -t 60000

      - name: 🧪 Run E2E Tests
        run: npx playwright test
        continue-on-error: true

      - name: ♿ Run Accessibility Tests
        run: npx playwright test tests/accessibility
        continue-on-error: true

      - name: 🎨 Run Visual Regression Tests
        run: npx backstop test || npx backstop approve
        continue-on-error: true

      - name: 🚀 Run Lighthouse Performance Tests
        run: npm run test:lighthouse
        continue-on-error: true

      - name: 📊 Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.node-version }}
          path: tests/reports/playwright/
          retention-days: 30

      - name: 📊 Upload BackstopJS Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backstop-report-${{ matrix.node-version }}
          path: tests/reports/backstop/
          retention-days: 30

      - name: 📊 Upload Lighthouse Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-report-${{ matrix.node-version }}
          path: tests/reports/lighthouse/
          retention-days: 30

      - name: 💬 Comment PR with Results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const summaryPath = 'tests/reports/lighthouse/summary.json';

            if (fs.existsSync(summaryPath)) {
              const summary = JSON.parse(fs.readFileSync(summaryPath, 'utf8'));

              let comment = '## 🧪 Test Results\n\n';
              comment += '### 🚀 Lighthouse Scores\n\n';
              comment += '| Page | Performance | Accessibility | Best Practices | SEO |\n';
              comment += '|------|------------|---------------|----------------|-----|\n';

              summary.forEach(result => {
                const perf = (result.performance * 100).toFixed(0);
                const a11y = (result.accessibility * 100).toFixed(0);
                const bp = (result.bestPractices * 100).toFixed(0);
                const seo = (result.seo * 100).toFixed(0);

                comment += `| ${result.name} | ${perf}% | ${a11y}% | ${bp}% | ${seo}% |\n`;
              });

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  # Job منفصل لتشغيل الاختبارات على متصفحات مختلفة
  cross-browser:
    name: 🌍 Cross-Browser Tests
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        browser: [chromium, firefox, webkit]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - run: npm ci --legacy-peer-deps
      - run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: 🚀 Start App
        run: |
          npm run build
          npm start &
          npx wait-on http://localhost:3001

      - name: 🧪 Run Tests on ${{ matrix.browser }}
        run: npx playwright test --project=${{ matrix.browser }}

      - name: 📊 Upload Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.browser }}
          path: tests/reports/
          retention-days: 30
